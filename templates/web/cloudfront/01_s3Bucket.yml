AWSTemplateFormatVersion: '2010-09-09'
#スタックパラメーター設定
Parameters:
  #環境名
  ENV:
    Type: String
    AllowedValues: ['prod', 'stg', 'dev']
    ConstraintDescription: Enter prod, stg, or dev."

  #サービス名
  ServiceName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    Default: play-store
    ConstraintDescription: Malformed input-Parameter ServiceName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「play-store」

Resources:
  # CloudFront Logs on S3 Bucket
  CFLogsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-cf-logs-bucket
      LifecycleConfiguration:
        Rules:
          - Id: S3LifecycleRule
            Status: Enabled
            ExpirationInDays: 366
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
      - Key: Name
        Value: !Sub ${ServiceName}-${ENV}-cf-logs-bucket
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  ######################### Stores on S3 Bucket #########################

  StoresBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-stores-bucket-${AWS::Region}
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${ServiceName}-${ENV}-stores-lifecycle
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      MetricsConfigurations:
        - Id: !Sub ${ServiceName}-${ENV}-stores-metrics-all
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-stores-bucket-${AWS::Region}
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName

  # S3Bucket Policy To Allow Access From CloudFront OAI
  StoresBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StoresBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${StoresBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${StoresBucketOriginAccessIdentity}

  # StoresBucket Origin Access Identity
  StoresBucketOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${ServiceName}-${ENV}-stores-bucket-identity

  ######################### Sitemap on S3 Bucket #########################

  SitemapBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-sitemap-bucket
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${ServiceName}-${ENV}-sitemap-lifecycle
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-sitemap-bucket
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName

  # S3Bucket Policy To Allow Access From CloudFront OAI
  SitemapBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SitemapBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${SitemapBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${SitemapBucketOriginAccessIdentity}

  # SitemapBucket Origin Access Identity
  SitemapBucketOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${ServiceName}-${ENV}-sitemap-identity

  ######################### Sorry Pages on S3 Bucket #########################

  SorryPagesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-sorry-pages-bucket
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${ServiceName}-${ENV}-stores-lifecycle
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-sorry-pages-bucket
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName

  # Stores Bucket Origin Access Identity
  SorryPagesBucketOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${ServiceName}-${ENV}-sorry-pages-identity

  # S3Bucket Policy To Allow Access From CloudFront OAI
  SorryPagesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SorryPagesBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${SorryPagesBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${SorryPagesBucketOriginAccessIdentity}

Outputs:
  CFLogsBucketName:
    Value: !Ref CFLogsBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-cf-logs-bucket
  CFLogsBucketArn:
    Value: !GetAtt 'CFLogsBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-cf-logs-arn
  CFLogsBucketDomainName:
    Value: !GetAtt 'CFLogsBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-cf-logs-domain
  StoresBucketName:
    Value: !Ref StoresBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket
  StoresBucketArn:
    Value: !GetAtt 'StoresBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket-arn
  StoresBucketDomainName:
    Value: !GetAtt 'StoresBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket-domain
  StoresBucketOAI:
    Value: !Ref StoresBucketOriginAccessIdentity
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket-oai
  SitemapBucketName:
    Value: !Ref SitemapBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-bucket
  SitemapBucketArn:
    Value: !GetAtt 'SitemapBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-arn
  SitemapBucketDomainName:
    Value: !GetAtt 'SitemapBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-domain
  SitemapBucketOAI:
    Value: !Ref SitemapBucketOriginAccessIdentity
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-oai
  SorryPagesBucketName:
    Value: !Ref SorryPagesBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sorry-pages
  SorryPagesBucketArn:
    Value: !GetAtt 'SorryPagesBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sorry-pages-arn
  SorryPagesBucketDomainName:
    Value: !GetAtt 'SorryPagesBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sorry-pages-domain
  SorryPagesBucketOriginAccessIdentity:
    Value: !Ref SorryPagesBucketOriginAccessIdentity
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sorry-pages-oai