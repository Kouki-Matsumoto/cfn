AWSTemplateFormatVersion: '2010-09-09'
#スタックパラメーター設定
Parameters:
  #環境名
  ENV:
    Type: String
    AllowedValues: ['prod', 'stg', 'dev']
    ConstraintDescription: Enter prod, stg, or dev."
  #サービス名
  ServiceName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    Default: play-store
    ConstraintDescription: Malformed input-Parameter ServiceName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「play-store」

  StoresBucketReplicationName:
    Type: String
    Description: Enter service name, like 「pvs-stg-stores-bucket-us」

  SitemapBucketReplicationName:
    Type: String
    Description: Enter service name, like 「pvs-stg-sitemap-bucket」

Conditions:
  hasStoresBucketReplicationName: !Not [!Equals [!Ref StoresBucketReplicationName, '']]
  hasSitemapBucketReplicationName: !Not [!Equals [!Ref SitemapBucketReplicationName, '']]

Resources:
  # ALB Logs on S3 Bucket
  ALBLogsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-alb-logs-bucket
      LifecycleConfiguration:
        Rules:
          - Id: S3LifecycleRule
            Status: Enabled
            ExpirationInDays: 366
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
      - Key: Name
        Value: !Sub ${ServiceName}-${ENV}-alb-logs-bucket
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # Bucket Policy for ALB Logs Bucket
  ALBLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ALBLogsBucket
      PolicyDocument:
        Id: ALBlogsBucketPolicy
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub 'arn:aws:s3:::${ALBLogsBucket}/*/AWSLogs/${AWS::AccountId}/*'
            Principal:
              AWS: '582318560864'
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub 'arn:aws:s3:::${ALBLogsBucket}/*/AWSLogs/${AWS::AccountId}/*'
            Principal:
              Service: delivery.logs.amazonaws.com
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Effect: Allow
            Action:
              - s3:GetBucketAcl
            Resource:
              - !Sub 'arn:aws:s3:::${ALBLogsBucket}'
            Principal:
              Service: delivery.logs.amazonaws.com

  # Config files on S3 Bucket
  ConfigBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-config-files
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      Tags:
      - Key: Name
        Value: !Sub ${ServiceName}-${ENV}-config-files
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # Stores on S3 Bucket
  StoresBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-stores-bucket
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${ServiceName}-${ENV}-stores-lifecycle
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration: !If
        - hasStoresBucketReplicationName
        - Role:
            Fn::ImportValue: !Sub ${ServiceName}-${ENV}-s3-access-role
          Rules:
            - Destination:
                Bucket: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref StoresBucketReplicationName
              Id: !Sub ${ServiceName}-${ENV}-stores-bucket-us-replication
              Status: Enabled
        - !Ref AWS::NoValue
      MetricsConfigurations:
        - Id: !Sub ${ServiceName}-${ENV}-stores-metrics-all
      Tags:
      - Key: Name
        Value: !Sub ${ServiceName}-${ENV}-stores-bucket
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # Stores Bucket Origin Access Identity
  StoresBucketOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${ServiceName}-${ENV}-stores-bucket-identity

  # S3Bucket Policy To Allow Access From CloudFront OAI
  StoresBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StoresBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${StoresBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${StoresBucketOriginAccessIdentity}

  SitemapBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${ServiceName}-${ENV}-sitemap-bucket-${AWS::Region}
      LifecycleConfiguration:
        Rules:
          - Id: !Sub ${ServiceName}-${ENV}-sitemap-lifecycle
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration: !If
        - hasSitemapBucketReplicationName
        - Role:
            Fn::ImportValue: !Sub ${ServiceName}-${ENV}-s3-access-role
          Rules:
            - Destination:
                Bucket: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref SitemapBucketReplicationName
              Id: !Sub ${ServiceName}-${ENV}-sitemap-bucket-us-replication
              Status: Enabled
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-sitemap-bucket-${AWS::Region}
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName

  # S3Bucket Policy To Allow Access From CloudFront OAI
  SitemapBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SitemapBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${SitemapBucket}/*
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${SitemapBucketOriginAccessIdentity}

  # SitemapBucket Origin Access Identity
  SitemapBucketOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${ServiceName}-${ENV}-sitemap-identity

Outputs:
  ALBLogsBucketName:
    Value: !Ref ALBLogsBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-alb-logs-bucket
  ALBLogsBucketArn:
    Value: !GetAtt 'ALBLogsBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-alb-logs-arn
  ALBLogsBucketDomainName:
    Value: !GetAtt 'ALBLogsBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-alb-logs-domain
  ConfigBucketName:
    Value: !Ref ConfigBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-config-logs-bucket
  ConfigBucketArn:
    Value: !GetAtt 'ConfigBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-config-logs-arn
  ConfigBucketDomainName:
    Value: !GetAtt 'ConfigBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-config-logs-domain
  StoresBucketName:
    Value: !Ref StoresBucket
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket
  StoresBucketArn:
    Value: !GetAtt 'StoresBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket-arn
  StoresBucketDomainName:
    Value: !GetAtt 'StoresBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket-domain
  StoresBucketOriginAccessIdentity:
    Value: !Ref StoresBucketOriginAccessIdentity
    Export:
      Name: !Sub ${ServiceName}-${ENV}-stores-bucket-oai
  SitemapBucketArn:
    Value: !GetAtt 'SitemapBucket.Arn'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-bucket-arn
  SitemapBucketDomainName:
    Value: !GetAtt 'SitemapBucket.DomainName'
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-bucket-domain
  SitemapBucketOriginAccessIdentity:
    Value: !Ref SitemapBucketOriginAccessIdentity
    Export:
      Name: !Sub ${ServiceName}-${ENV}-sitemap-bucket-oai
