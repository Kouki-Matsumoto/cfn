
AWSTemplateFormatVersion: '2010-09-09'
Description: Notification to Slack

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Base Setting
        Parameters:
          - ENV
          - ServiceName
      - Label:
          default: Subscriptions Parameters
        Parameters:
          - SubscriptionLambdaFunctionArn
          - SubscriptionMailAddress
      - Label:
          default: Options
        Parameters:
          - MigrationHubServerID

#スタックパラメーター設定
Parameters:
  #環境名
  ENV:
    Type: String
    AllowedValues: ['prod', 'stg', 'dev']
    ConstraintDescription: Enter prod, stg, or dev."

  #サービス名
  ServiceName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    Default: rare-light
    ConstraintDescription: Malformed input-Parameter ServiceName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「rare-light」

  # SNS Topic サブスクリプション用Lambda
  SubscriptionLambdaFunctionArn:
    Type: String
    Description: Enter lambda function arn, like 「arn:aws:lambda:ap-northeast-1:xxxx:function:xxxxxxx」

  # SNS Topic サブスクリプション用メールアドレス
  SubscriptionMailAddress:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9_+-]+(.[a-zA-Z0-9_+-]+)*@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\.)+[a-zA-Z]{2,}$
    Default: m.k.o.yuzuriha@gmail.com
    Description: Enter e-mail address, like ?m.k.o.yuzuriha@gmail.com?

  # MigrationHubServerID
  MigrationHubServerID:
    Type: String
    Description: Enter Migration Hub Server ID, like 「d-server-000zia7b0qhil8」
    Default: ''

Conditions:
  HasNotSubscriptionLambda: !Equals [!Ref SubscriptionLambdaFunctionArn, '']
  HasNotSubscriptionMailAddress: !Equals [!Ref SubscriptionMailAddress, '']
  HasMigrationHubServerID: !Not [!Equals [!Ref MigrationHubServerID, '']]

Resources:
###################################### SNS ############################################

  # Criticalアラート通知用 SNS Topic
  CloudWatchAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-sns-topic
      Subscription: !If
        - HasNotSubscriptionLambda
        # Lambda for Slack
        - !Ref 'AWS::NoValue'
        - - Endpoint: !Ref SubscriptionLambdaFunctionArn
            Protocol: "lambda"
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-sns-topic
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName
        - !If
          - HasMigrationHubServerID
          - Key: map-migrated
            Value: !Ref MigrationHubServerID
          - !Ref AWS::NoValue

  # Warningアラート通知用 SNS Topic
  WarningAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${ServiceName}-${ENV}-warning-alarm-sns-topic
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-warning-alarm-sns-topic
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName
        - !If
          - HasMigrationHubServerID
          - Key: map-migrated
            Value: !Ref MigrationHubServerID
          - !Ref AWS::NoValue

  # Cost Anomaly Detection SNS Topic
  CostAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${ServiceName}-${ENV}-cost-alarm-sns-topic
      Subscription:  !If
        - HasNotSubscriptionMailAddress
        - !Ref 'AWS::NoValue'
        - - Endpoint: !Ref SubscriptionMailAddress
            Protocol: "email"
      Tags:
        - Key: Name
          Value: !Sub ${ServiceName}-${ENV}-cost-alarm-sns-topic
        - Key: ENV
          Value: !Ref ENV
        - Key: Project
          Value: !Ref ServiceName
        - !If
          - HasMigrationHubServerID
          - Key: map-migrated
            Value: !Ref MigrationHubServerID
          - !Ref AWS::NoValue

  # Cost Anomaly Detection SNS Topic Policy
  CostAlarmTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    DependsOn: CostAlarmTopic
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: DefaultStatementPolicy
          Effect: Allow
          Principal:
            AWS: '*'
          Action:
            - sns:GetTopicAttributes
            - sns:SetTopicAttributes
            - sns:AddPermission
            - sns:RemovePermission
            - sns:DeleteTopic
            - sns:Subscribe
            - sns:ListSubscriptionsByTopic
            - sns:Publish
          Resource: !Ref CostAlarmTopic
        - Sid: CostAlarmTopicPolicy
          Effect: Allow
          Principal:
            Service: costalerts.amazonaws.com
          Action:
            - sns:Publish
          Resource: !Ref CostAlarmTopic
      Topics:
        - !Ref CostAlarmTopic

Outputs:
  CloudWatchAlarmTopicArn:
    Value: !Ref CloudWatchAlarmTopic
    Export:
      Name: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
  WarningAlarmTopicArn:
    Value: !Ref WarningAlarmTopic
    Export:
      Name: !Sub ${ServiceName}-${ENV}-warning-alarm-topic
  CostAlarmTopicArn:
    Value: !Ref CostAlarmTopic
    Export:
      Name: !Sub ${ServiceName}-${ENV}-cost-alarm-topic
