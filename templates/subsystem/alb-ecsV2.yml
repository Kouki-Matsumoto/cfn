AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Base Setting
        Parameters:
          - ENV
          - ServiceName
          - SystemName
      - Label:
          default: Application Load Balancer
        Parameters:
          - ALBSchemaType
          - SSLArn
          - PublicALBSecurityPolicy
          - PublicALBWafFailOpen
          - ALBDropInvalidHeaderFields
          - PreSharedKey
          - BlueGreenListenerPathPattern
      - Label:
          default: Target groups
        Parameters:
          - HealthCheckPathName
      - Label:
          default: ECS
        Parameters:
          - ContainerPort
          - TaskRoleOutputName
          - UseConfigBucket
          - ECSTaskDefinitionCPU
          - ECSTaskDefinitionMemory
          - ECSTaskDefinitionSecretName1
          - ECSTaskDefinitionSecretValueFrom1
          - ECSTaskDefinitionSecretName2
          - ECSTaskDefinitionSecretValueFrom2
          - ECSTaskDefinitionSecretName3
          - ECSTaskDefinitionSecretValueFrom3
      - Label:
          default: ECS AutoScaling Scaling
        Parameters:
          - ECSTaskDesiredCountBlue
          - ECSTaskDesiredCountGreen
          - ECSTargetTracking
          - ECSStepScaleOutThreshold
          - ECSStepScaleInThreshold
      - Label:
          default: Options
        Parameters:
          - MigrationHubServerID

#スタックパラメーター設定
Parameters:
  #環境名
  ENV:
    Type: String
    AllowedValues: ['prod', 'stg', 'dev']
    ConstraintDescription: Enter prod, stg, or dev."
  #サービス名
  ServiceName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    Default: play-store
    ConstraintDescription: Malformed input-Parameter ServiceName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「play-store」

  #システム名
  SystemName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    ConstraintDescription: Malformed input-Parameter SystemName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「venus-api」

  # ALB Type
  ALBSchemaType:
    Type: String
    AllowedValues: ['both', 'internet-facing', 'internal']
    Default: 'both'
    ConstraintDescription: Enter both, internet-facing, or internal.
    Description: Select one ALB Type both(internet-facing & internal), internet-facing or internal

  # コンテナポート
  ContainerPort:
    Type: Number
    MinValue: 1
    MaxValue: 65565
    ConstraintDescription: Malformed input-Parameter ContainerPort must match 1 ~ 65565
    Description: Enter number of container port, like 「8080」

  # SSL ACM ARN
  SSLArn:
    Type: String
    Default: 'arn:aws:acm:ap-northeast-1:845168618390:certificate/857b5e23-f62e-4514-a139-a44ef2f1083d'
    Description: Specify ACM ARN

  # Target Group Health Check Path
  HealthCheckPathName:
    Type: String
    AllowedPattern: ^[a-z0-9-_]*$
    Default: health_check
    ConstraintDescription: Malformed input-Parameter HealthCheckPathName must match pattern [a-z0-9-_]+
    Description: Enter Target Group Health Check Path, like 「health_check」

  TaskRoleOutputName:
    Type: String
    Default: 'ecs-task-dynamodb-role-arn'
    Description: Output Name of ECS Task Role. Default (ecs-task-dynamodb-role-arn)

  # Use Config Bucket
  UseConfigBucket:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    ConstraintDescription: Enter true or false."

  # ECS Task(Blue) Desired Count
  ECSTaskDesiredCountBlue:
    Type: Number
    MinValue: 0
    MaxValue: 50
    Default: 0
    ConstraintDescription: Malformed input-Parameter ECSTaskDesiredCountBlue must match 0 ~ 50
    Description: Enter number of ECS task blue desired count, like 「1」

  # ECS Task(Blue) Desired Count
  ECSTaskDesiredCountGreen:
    Type: Number
    MinValue: 0
    MaxValue: 50
    Default: 0
    ConstraintDescription: Malformed input-Parameter ECSTaskDesiredCountGreen must match 0 ~ 50
    Description: Enter number of ECS task green desired count, like 「1」

  # ECS Task TargetTracking
  ECSTargetTracking:
    Type: Number
    MinValue: 0.0
    MaxValue: 100.0
    Default: 50.0
    ConstraintDescription: Malformed input-Parameter ECSTargetTracking must match 0.0 ~ 100.0
    Description: Enter number of ECS task blue target tracking, like 「25.0」

  # ECS Step Scale Out CPU Utilization Threshold
  ECSStepScaleOutThreshold:
    Type: Number
    MinValue: 0.0
    MaxValue: 100.0
    Default: 0.0
    ConstraintDescription: Malformed input-Parameter ECSStepScaleOutThreshold must match 0.0 ~ 100.0
    Description: Enter number of ECS step scale out CPU Utilization threshold, like 「80.0」

  # ECS Step Scale In CPU Utilization Threshold
  ECSStepScaleInThreshold:
    Type: Number
    MinValue: 0.0
    MaxValue: 100.0
    Default: 0.0
    ConstraintDescription: Malformed input-Parameter ECSStepScaleInThreshold must match 0.0 ~ 100.0
    Description: Enter number of ECS step scale in CPU Utilization threshold, like 「50.0」

  # ECS TaskDefinition CPU
  ECSTaskDefinitionCPU:
    Type: Number
    AllowedValues: [256, 512, 1024, 2048, 3072]
    Default: 512
    Description: Enter 512, 1024 or 2048 ...

  # ECS TaskDefinition Memory
  ECSTaskDefinitionMemory:
    Type: Number
    AllowedValues: [512, 1024, 2048, 3072, 4096]
    Default: 1024
    Description: Enter 512, 1024 or 2048 ...

  ## ECS Task Definition SecretName
  ECSTaskDefinitionSecretName1:
    Type: String
    AllowedPattern: ^[A-Z0-9-_]*$
    Default: ''
    Description: Enter secret name of ECS task definition, like 「TEST_CREDENTIALS」

  ## ECS TaskDefinition SecretValueFrom
  ECSTaskDefinitionSecretValueFrom1:
    Type: String
    Default: ''
    Description: Enter secret value of ECS task definition, like 「arn:aws:secretsmanager:ap-northeast-1:179017469188:secret:stg/test:TEST_CREDENTIALS::」

  ## ECS Task Definition SecretName
  ECSTaskDefinitionSecretName2:
    Type: String
    AllowedPattern: ^[A-Z0-9-_]*$
    Default: ''
    Description: Enter secret name of ECS task definition, like 「TEST_CREDENTIALS」

  ## ECS TaskDefinition SecretValueFrom
  ECSTaskDefinitionSecretValueFrom2:
    Type: String
    Default: ''
    Description: Enter secret value of ECS task definition, like 「arn:aws:secretsmanager:ap-northeast-1:179017469188:secret:stg/test:TEST_CREDENTIALS::」

  ## ECS Task Definition SecretName
  ECSTaskDefinitionSecretName3:
    Type: String
    AllowedPattern: ^[A-Z0-9-_]*$
    Default: ''
    Description: Enter secret name of ECS task definition, like 「TEST_CREDENTIALS」

  ## ECS TaskDefinition SecretValueFrom
  ECSTaskDefinitionSecretValueFrom3:
    Type: String
    Default: ''
    Description: Enter secret value of ECS task definition, like 「arn:aws:secretsmanager:ap-northeast-1:179017469188:secret:stg/test:TEST_CREDENTIALS::」

  # Public ALB SecurityPolicy
  PublicALBSecurityPolicy:
    Type: String
    AllowedValues:
      - "ELBSecurityPolicy-2016-08"
      - "ELBSecurityPolicy-TLS-1-0-2015-04"
      - "ELBSecurityPolicy-TLS-1-1-2017-01"
      - "ELBSecurityPolicy-TLS-1-2-2017-01"
      - "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
      - "ELBSecurityPolicy-FS-2018-06"
      - "ELBSecurityPolicy-FS-1-1-2019-08"
      - "ELBSecurityPolicy-FS-1-2-2019-08"
      - "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
      - "ELBSecurityPolicy-FS-1-2-Res-2019-08"
      - "ELBSecurityPolicy-FS-1-2-Res-2020-10"
    Default: 'ELBSecurityPolicy-2016-08'
    ConstraintDescription: Select Security policy for Public ALB."

  # Public ALB WAF Fail Open
  PublicALBWafFailOpen:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    ConstraintDescription: Select WAF Fail Open for Public ALB."

  # ALB Drop Invalid HeaderFields Options
  ALBDropInvalidHeaderFields:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    ConstraintDescription: Enter true or false.'

  # X-Pre-Shared-Key Options
  PreSharedKey:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    ConstraintDescription: Enter true or false.'

  # MigrationHubServerID
  MigrationHubServerID:
    Type: String
    ConstraintDescription: Malformed Input-Parameter must match pattern [a-z0-9-_]+
    Description: Enter Migration Hub Server ID, like 「d-server-000zia7b0qhil8」
    Default: ''

  # BlueGreenListenerPathPattern
  BlueGreenListenerPathPattern:
    Type: String
    Default: '/*'
    AllowedPattern: ^[a-z0-9*?_\-.$/~"'@:+]*$
    ConstraintDescription: Malformed input-Parameter BlueGreenListenerPathPattern must match pattern [a-z0-9*?_-.$/~"'@:+]+
    Description: Enter service name, like 「/v?/**/service/*」


Conditions:
  isALBSchemaBoth: !Equals [!Ref ALBSchemaType, 'both']
  isProd: !Equals [!Ref ENV, prod]
  HasALBSchemaInternet: !Or
    - !Equals [!Ref ALBSchemaType, 'internet-facing']
    - Condition: isALBSchemaBoth
  HasALBSchemaInternal: !Or
    - !Not [!Equals [!Ref ALBSchemaType, 'internet-facing']]
    - Condition: isALBSchemaBoth
  HasECSTaskDefinitionSecrets1: !And
    - !Not [!Equals [!Ref ECSTaskDefinitionSecretName1, '']]
    - !Not [!Equals [!Ref ECSTaskDefinitionSecretValueFrom1, '']]
  HasECSTaskDefinitionSecrets2: !And
    - !Not [!Equals [!Ref ECSTaskDefinitionSecretName2, '']]
    - !Not [!Equals [!Ref ECSTaskDefinitionSecretValueFrom2, '']]
  HasECSTaskDefinitionSecrets3: !And
    - !Not [!Equals [!Ref ECSTaskDefinitionSecretName3, '']]
    - !Not [!Equals [!Ref ECSTaskDefinitionSecretValueFrom3, '']]
  HasConfigBucket: !Equals [!Ref UseConfigBucket, 'true']
  HasECSStepScaleOutThreshold: !Not [!Equals [!Ref ECSStepScaleOutThreshold, 0.0]]
  HasECSStepScaleInThreshold: !Not [!Equals [!Ref ECSStepScaleInThreshold, 0.0]]
  HasALBDropInvalidHeaderFields: !Equals [!Ref ALBDropInvalidHeaderFields, 'true']
  HasPreSharedKey: !And
    - !Equals [!Ref PreSharedKey, 'true']
    - Condition: HasALBSchemaInternet
  HasMigrationHubServerID: !Not [!Equals [!Ref MigrationHubServerID, '']]


Resources:

####################################### Target Group for ALB ############################################

  # ------------------------------------------------------------#
  # Blue TargetGroup (Public)
  # ------------------------------------------------------------#
  ALBTargetBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: HasALBSchemaInternet
    Properties:
      Name: !Sub ${SystemName}-${ENV}-blue
      VpcId:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-VpcId
      UnhealthyThresholdCount: '2'
      HealthCheckPath: !Sub "/${HealthCheckPathName}"
      HealthCheckPort: traffic-port
      TargetType: ip
      Matcher:
        HttpCode: '200'
      Port: !Ref ContainerPort
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-blue
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # Green TargetGroup (Public)
  # ------------------------------------------------------------#
  ALBTargetGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: HasALBSchemaInternet
    Properties:
      Name: !Sub ${SystemName}-${ENV}-green
      VpcId:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-VpcId
      UnhealthyThresholdCount: '2'
      HealthCheckPath: !Sub "/${HealthCheckPathName}"
      HealthCheckPort: traffic-port
      TargetType: ip
      Matcher:
        HttpCode: '200'
      Port: !Ref ContainerPort
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-green
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # Blue TargetGroup (Internal)
  # ------------------------------------------------------------#
  InternalALBTargetBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: HasALBSchemaInternal
    Properties:
      Name: !Sub ${SystemName}-${ENV}-i-blue
      VpcId:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-VpcId
      UnhealthyThresholdCount: '2'
      HealthCheckPath: !Sub "/${HealthCheckPathName}"
      HealthCheckPort: traffic-port
      TargetType: ip
      Matcher:
        HttpCode: '200'
      Port: !Ref ContainerPort
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-i-blue
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # Green TargetGroup (Internal)
  # ------------------------------------------------------------#
  InternalALBTargetGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: HasALBSchemaInternal
    Properties:
      Name: !Sub ${SystemName}-${ENV}-i-green
      VpcId:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-VpcId
      UnhealthyThresholdCount: '2'
      HealthCheckPath: !Sub "/${HealthCheckPathName}"
      HealthCheckPort: traffic-port
      TargetType: ip
      Matcher:
        HttpCode: '200'
      Port: !Ref ContainerPort
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-i-green
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

####################################### Application Load Balancer ############################################

  # ------------------------------------------------------------#
  # ALB (Public)
  # ------------------------------------------------------------#
  PublicALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: HasALBSchemaInternet
    Properties:
      Name: !Sub ${SystemName}-${ENV}-alb
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value:
            Fn::ImportValue: !Sub '${ServiceName}-${ENV}-alb-logs-bucket'
        - Key: access_logs.s3.prefix
          Value: !Sub '${SystemName}/public'
        - !If
          - HasALBDropInvalidHeaderFields
          - Key: routing.http.drop_invalid_header_fields.enabled
            Value: true
          - !Ref 'AWS::NoValue'
        - Key: waf.fail_open.enabled
          Value: !Ref PublicALBWafFailOpen
      SecurityGroups:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-alb-sg-id

      Subnets:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-public-subnet-a
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-public-subnet-c
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-public-subnet-d
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-alb
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # ALB (Internal)
  # ------------------------------------------------------------#
  InternalALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: HasALBSchemaInternal
    Properties:
      Name: !Sub ${SystemName}-${ENV}-i-alb
      Type: application
      IpAddressType: ipv4
      Scheme: internal
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value:
            Fn::ImportValue: !Sub '${ServiceName}-${ENV}-alb-logs-bucket'
        - Key: access_logs.s3.prefix
          Value: !Sub '${SystemName}/internal'
      SecurityGroups:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-common-sg-id
      Subnets:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-private-subnet-a
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-private-subnet-c
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-private-subnet-d
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-i-alb
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

####################################### ALB Listener ############################################

  # ------------------------------------------------------------#
  # ALB Listener (Public)
  # ------------------------------------------------------------#
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: HasALBSchemaInternet
    Properties:
      Port: 443
      Protocol: HTTPS
      LoadBalancerArn: !Ref PublicALB
      Certificates:
        - CertificateArn: !Ref SSLArn
        - !Ref "AWS::NoValue"
      SslPolicy: !Ref PublicALBSecurityPolicy
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            StatusCode: 404
            MessageBody: 'NotFound'

  # ------------------------------------------------------------#
  # ALB NotFound Listener Rule (Public)
  # ------------------------------------------------------------#
  ALBBlueGreenListener:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Condition: HasALBSchemaInternet
    DependsOn: ALBListener
    Properties:
      ListenerArn: !Ref ALBListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Ref BlueGreenListenerPathPattern
      Actions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
            - TargetGroupArn: !Ref ALBTargetBlue
              Weight: 1
            - TargetGroupArn: !Ref ALBTargetGreen
              Weight: 0

  # ------------------------------------------------------------#
  # ALB Pre Shared Listener Rule (Public)
  # ------------------------------------------------------------#
  ALBPreSharedListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Condition: HasPreSharedKey
    DependsOn: ALBListener
    Properties:
      ListenerArn: !Ref ALBListener
      Priority: 2
      Conditions:
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: x-pre-shared-key
            Values:
              - !Ref SystemName
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Ref BlueGreenListenerPathPattern
      Actions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
            - TargetGroupArn: !Ref ALBTargetBlue
              Weight: 1
            - TargetGroupArn: !Ref ALBTargetGreen
              Weight: 0

  # ------------------------------------------------------------#
  # ALB HTTP Listener (Public)
  # ------------------------------------------------------------#
  ALBNoSSLRedirectListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: HasALBSchemaInternet
    Properties:
      Port: 80
      Protocol: HTTP
      LoadBalancerArn: !Ref PublicALB
      DefaultActions:
      - Type: redirect
        RedirectConfig:
          Host: '#{host}'
          Path: '/#{path}'
          Port: 443
          Protocol: HTTPS
          Query: '#{query}'
          StatusCode: HTTP_301

  # ------------------------------------------------------------#
  # ALB Listener (Internal)
  # ------------------------------------------------------------#
  InternalALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: HasALBSchemaInternal
    Properties:
      Port: 80
      Protocol: HTTP
      LoadBalancerArn: !Ref InternalALB
      DefaultActions:
      - Type: fixed-response
        FixedResponseConfig:
          ContentType: text/plain
          StatusCode: 404
          MessageBody: 'NotFound'

  # ------------------------------------------------------------#
  # ALB Blue/Green Listener Rule (Internal)
  # ------------------------------------------------------------#
  InternalALBBlueGreenListener:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Condition: HasALBSchemaInternal
    DependsOn: InternalALBListener
    Properties:
      ListenerArn: !Ref InternalALBListener
      Priority: 1
      Conditions:
      - Field: path-pattern
        PathPatternConfig:
          Values:
          - '/*'
      Actions:
      - Type: forward
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref InternalALBTargetBlue
            Weight: 1
          - TargetGroupArn: !Ref InternalALBTargetGreen
            Weight: 0

  # ------------------------------------------------------------#
  # ALB Listener WaitConditionHandle
  # ------------------------------------------------------------#
  ALBListenerReady:
    Type: AWS::CloudFormation::WaitConditionHandle
    Metadata:
      ALBBlueGreenListener: !If [ HasALBSchemaInternet, !Ref ALBBlueGreenListener, "" ]
      InternalALBBlueGreenListener: !If [ HasALBSchemaInternal, !Ref InternalALBBlueGreenListener, "" ]

####################################### ECR ############################################

  # ------------------------------------------------------------#
  # ECR
  # ------------------------------------------------------------#
  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${SystemName}-${ENV}
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-ecr
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

####################################### ECS ############################################

  # ------------------------------------------------------------#
  # ECS Cluster
  # ------------------------------------------------------------#
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${SystemName}-${ENV}
      ClusterSettings:
        - Name: containerInsights
          Value: !If [isProd, enabled, disabled]
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-ecs
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # ECS Blue TaskDefinition
  # ------------------------------------------------------------#
  ECSTaskDefinitionBlue:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${SystemName}-${ENV}-blue
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: !Ref ECSTaskDefinitionCPU
      Memory: !Ref ECSTaskDefinitionMemory
      ExecutionRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-task-execution-role-arn
      TaskRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-${TaskRoleOutputName}
      ContainerDefinitions:
        - Name: !Sub ${SystemName}-${ENV}-blue
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:${ENV}-blue
          PortMappings:
          - ContainerPort: !Ref ContainerPort
            HostPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Sub "/ecs/${SystemName}-${ENV}"
              awslogs-region: ap-northeast-1
              awslogs-stream-prefix: ecs
          Environment:
            - !If
              - HasConfigBucket
              - Name: 'CONFIG_BUCKET'
                Value:
                  Fn::ImportValue: !Sub ${ServiceName}-${ENV}-config-logs-bucket
              - !Ref 'AWS::NoValue'
          Secrets:
            - !If
              - HasECSTaskDefinitionSecrets1
              - Name: !Ref ECSTaskDefinitionSecretName1
                ValueFrom: !Ref ECSTaskDefinitionSecretValueFrom1
              - !Ref 'AWS::NoValue'
            - !If
              - HasECSTaskDefinitionSecrets2
              - Name: !Ref ECSTaskDefinitionSecretName2
                ValueFrom: !Ref ECSTaskDefinitionSecretValueFrom2
              - !Ref 'AWS::NoValue'
            - !If
              - HasECSTaskDefinitionSecrets3
              - Name: !Ref ECSTaskDefinitionSecretName3
                ValueFrom: !Ref ECSTaskDefinitionSecretValueFrom3
              - !Ref 'AWS::NoValue'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-blue-task-definition
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # ECS Green TaskDefinition
  # ------------------------------------------------------------#
  ECSTaskDefinitionGreen:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${SystemName}-${ENV}-green
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: !Ref ECSTaskDefinitionCPU
      Memory: !Ref ECSTaskDefinitionMemory
      ExecutionRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-task-execution-role-arn
      TaskRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-${TaskRoleOutputName}
      ContainerDefinitions:
        - Name: !Sub ${SystemName}-${ENV}-green
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:${ENV}-green
          PortMappings:
          - ContainerPort: !Ref ContainerPort
            HostPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Sub "/ecs/${SystemName}-${ENV}"
              awslogs-region: ap-northeast-1
              awslogs-stream-prefix: ecs
          Environment:
            - !If
              - HasConfigBucket
              - Name: 'CONFIG_BUCKET'
                Value:
                  Fn::ImportValue: !Sub ${ServiceName}-${ENV}-config-logs-bucket
              - !Ref 'AWS::NoValue'
          Secrets:
            - !If
              - HasECSTaskDefinitionSecrets1
              - Name: !Ref ECSTaskDefinitionSecretName1
                ValueFrom: !Ref ECSTaskDefinitionSecretValueFrom1
              - !Ref 'AWS::NoValue'
            - !If
              - HasECSTaskDefinitionSecrets2
              - Name: !Ref ECSTaskDefinitionSecretName2
                ValueFrom: !Ref ECSTaskDefinitionSecretValueFrom2
              - !Ref 'AWS::NoValue'
            - !If
              - HasECSTaskDefinitionSecrets3
              - Name: !Ref ECSTaskDefinitionSecretName3
                ValueFrom: !Ref ECSTaskDefinitionSecretValueFrom3
              - !Ref 'AWS::NoValue'
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-green-task-definition
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # ECS Blue Service
  # ------------------------------------------------------------#
  ECSServiceBlue:
    Type: AWS::ECS::Service
    DependsOn:
      - ALBListenerReady
      - ECSTaskDefinitionBlue
    Properties:
      ServiceName: !Sub ${SystemName}-${ENV}-${ALBSchemaType}-blue
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref ECSTaskDesiredCountBlue
      LaunchType: FARGATE
      EnableECSManagedTags: true
      EnableExecuteCommand: true
      PropagateTags: TASK_DEFINITION
      LoadBalancers:
        - !If
          - HasALBSchemaInternet
          - ContainerName: !Sub ${SystemName}-${ENV}-blue
            ContainerPort: !Ref ContainerPort
            TargetGroupArn: !Ref ALBTargetBlue
          - !Ref 'AWS::NoValue'
        - !If
          - HasALBSchemaInternal
          - ContainerName: !Sub ${SystemName}-${ENV}-blue
            ContainerPort: !Ref ContainerPort
            TargetGroupArn: !Ref InternalALBTargetBlue
          - !Ref 'AWS::NoValue'
      TaskDefinition: !Ref ECSTaskDefinitionBlue
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-a
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-c
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-d
          SecurityGroups:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-common-sg-id
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-blue-service
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

  # ------------------------------------------------------------#
  # ECS Green Service
  # ------------------------------------------------------------#
  ECSServiceGreen:
    Type: AWS::ECS::Service
    DependsOn:
      - ALBListenerReady
      - ECSTaskDefinitionGreen
    Properties:
      ServiceName: !Sub ${SystemName}-${ENV}-${ALBSchemaType}-green
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref ECSTaskDesiredCountGreen
      LaunchType: FARGATE
      EnableECSManagedTags: true
      EnableExecuteCommand: true
      PropagateTags: TASK_DEFINITION
      LoadBalancers:
        - !If
          - HasALBSchemaInternet
          - ContainerName: !Sub ${SystemName}-${ENV}-green
            ContainerPort: !Ref ContainerPort
            TargetGroupArn: !Ref ALBTargetGreen
          - !Ref 'AWS::NoValue'
        - !If
          - HasALBSchemaInternal
          - ContainerName: !Sub ${SystemName}-${ENV}-green
            ContainerPort: !Ref ContainerPort
            TargetGroupArn: !Ref InternalALBTargetGreen
          - !Ref 'AWS::NoValue'
      TaskDefinition: !Ref ECSTaskDefinitionGreen
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-a
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-c
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-d
          SecurityGroups:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-common-sg-id
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-green-service
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
      - Key: SystemName
        Value: !Ref SystemName
      - !If
        - HasMigrationHubServerID
        - Key: map-migrated
          Value: !Ref MigrationHubServerID
        - !Ref AWS::NoValue

####################################### AutoScaling ############################################

  # ------------------------------------------------------------#
  # ScalableTarget Blue
  # ------------------------------------------------------------#
  AutoScalingTargetBlue:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !Ref ECSTaskDesiredCountBlue
      MaxCapacity: 50
      ResourceId: !Sub
        - 'service/${Cluster}/${Service}'
        - Cluster: !Ref ECSCluster
          Service: !GetAtt 'ECSServiceBlue.Name'
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      RoleARN: !Sub
        arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService

  # ------------------------------------------------------------#
  # ScalableTarget Green
  # ------------------------------------------------------------#
  AutoScalingTargetGreen:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !Ref ECSTaskDesiredCountGreen
      MaxCapacity: 50
      ResourceId: !Sub
        - 'service/${Cluster}/${Service}'
        - Cluster: !Ref ECSCluster
          Service: !GetAtt 'ECSServiceGreen.Name'
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      RoleARN: !Sub
        arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService

  # ------------------------------------------------------------#
  # ScalingPolicy Blue
  # ------------------------------------------------------------#
  AutoScallingPolicyBlue:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn:
      - ECSServiceBlue
    Properties:
      PolicyName: !Sub ${SystemName}-${ENV}-blue-auto-scaling
      ScalingTargetId: !Ref AutoScalingTargetBlue
      PolicyType: TargetTrackingScaling
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: !Ref ECSTargetTracking
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleOutCooldown: 60
        ScaleInCooldown: 60

  # ------------------------------------------------------------#
  # ScalingPolicy Green
  # ------------------------------------------------------------#
  AutoScallingPolicyGreen:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    DependsOn:
      - ECSServiceGreen
    Properties:
      PolicyName: !Sub ${SystemName}-${ENV}-green-auto-scaling
      ScalingTargetId: !Ref AutoScalingTargetGreen
      PolicyType: TargetTrackingScaling
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: !Ref ECSTargetTracking
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        ScaleOutCooldown: 60
        ScaleInCooldown: 60

  # ------------------------------------------------------------#
  # StepScalingPolicy (Scale Out) Blue
  # ------------------------------------------------------------#
  StepScallingScaleOutPolicyBlue:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: HasECSStepScaleOutThreshold
    DependsOn:
      - ECSServiceBlue
    Properties:
      PolicyName: !Sub ${SystemName}-${ENV}-blue-step-scale-out
      ScalingTargetId: !Ref AutoScalingTargetBlue
      PolicyType: StepScaling
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 10
            ScalingAdjustment: 10
          - MetricIntervalLowerBound: 10
            ScalingAdjustment: 20
        Cooldown: 60
        MetricAggregationType: Average

  # ------------------------------------------------------------#
  # StepScalingPolicy (Scale Out) Green
  # ------------------------------------------------------------#
  StepScallingScaleOutPolicyGreen:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: HasECSStepScaleOutThreshold
    DependsOn:
      - ECSServiceGreen
    Properties:
      PolicyName: !Sub ${SystemName}-${ENV}-green-step-scale-out
      ScalingTargetId: !Ref AutoScalingTargetGreen
      PolicyType: StepScaling
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 10
            ScalingAdjustment: 10
          - MetricIntervalLowerBound: 10
            ScalingAdjustment: 20
        Cooldown: 60
        MetricAggregationType: Average

  # ------------------------------------------------------------#
  # StepScalingPolicy (Scale In) Blue
  # ------------------------------------------------------------#
  StepScallingScaleInPolicyBlue:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: HasECSStepScaleInThreshold
    DependsOn:
      - ECSServiceBlue
    Properties:
      PolicyName: !Sub ${SystemName}-${ENV}-blue-step-scale-in
      ScalingTargetId: !Ref AutoScalingTargetBlue
      PolicyType: StepScaling
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: -40
            MetricIntervalUpperBound: -35
            ScalingAdjustment: -25
          - MetricIntervalLowerBound: -45
            MetricIntervalUpperBound: -40
            ScalingAdjustment: -50
          - MetricIntervalUpperBound: -45
            ScalingAdjustment: -75
        MinAdjustmentMagnitude: 1
        Cooldown: 120
        MetricAggregationType: Average

  # ------------------------------------------------------------#
  # StepScalingPolicy (Scale In) Green
  # ------------------------------------------------------------#
  StepScallingScaleInPolicyGreen:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: HasECSStepScaleInThreshold
    DependsOn:
      - ECSServiceGreen
    Properties:
      PolicyName: !Sub ${SystemName}-${ENV}-green-step-scale-in
      ScalingTargetId: !Ref AutoScalingTargetGreen
      PolicyType: StepScaling
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: -40
            MetricIntervalUpperBound: -35
            ScalingAdjustment: -25
          - MetricIntervalLowerBound: -45
            MetricIntervalUpperBound: -40
            ScalingAdjustment: -50
          - MetricIntervalUpperBound: -45
            ScalingAdjustment: -75
        MinAdjustmentMagnitude: 1
        Cooldown: 120
        MetricAggregationType: Average

#######################################CloudWatch Alarms############################################

  # ------------------------------------------------------------#
  # ECS Blue Service CPUUtilization Alarm
  # ------------------------------------------------------------#
  CPUAlarmServiceBlue:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternet
    Properties:
      AlarmName: !Join
        - ''
        - - 'CPUUtilization ['
          - !GetAtt 'ECSServiceBlue.Name'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Statistic: Average
      Dimensions:
        - Name: ClusterName
          Value : !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt 'ECSServiceBlue.Name'
      AlarmDescription: "ECS CPU使用率 80%"
      Period: 300
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # ECS Green Service CPUUtilization Alarm
  # ------------------------------------------------------------#
  CPUAlarmServiceGreen:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternet
    Properties:
      AlarmName: !Join
        - ''
        - - 'CPUUtilization ['
          - !GetAtt 'ECSServiceGreen.Name'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Statistic: Average
      Dimensions:
        - Name: ClusterName
          Value : !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt 'ECSServiceGreen.Name'
      AlarmDescription: "ECS CPU使用率 80%"
      Period: 300
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # ECS Blue Service CPUUtilization Alarm (Step Scaling Scale Out)
  # ------------------------------------------------------------#
  CPUAlarmServiceScaleOutBlue:
    Type: AWS::CloudWatch::Alarm
    Condition: HasECSStepScaleOutThreshold
    DependsOn:
      - StepScallingScaleOutPolicyBlue
    Properties:
      AlarmName: !Join
        - ''
        - - 'CPUUtilization Step Scale Out ['
          - !GetAtt 'ECSServiceBlue.Name'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Statistic: Average
      Dimensions:
        - Name: ClusterName
          Value : !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt 'ECSServiceBlue.Name'
      AlarmDescription: !Sub "ECS CPU使用率 ${ECSStepScaleOutThreshold}%"
      Period: 60
      Threshold: !Ref ECSStepScaleOutThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - !Ref StepScallingScaleOutPolicyBlue

  # ------------------------------------------------------------#
  # ECS Green Service CPUUtilization Alarm (Step Scaling Scale Out)
  # ------------------------------------------------------------#
  CPUAlarmServiceScaleOutGreen:
    Type: AWS::CloudWatch::Alarm
    Condition: HasECSStepScaleOutThreshold
    DependsOn:
      - StepScallingScaleOutPolicyGreen
    Properties:
      AlarmName: !Join
        - ''
        - - 'CPUUtilization Step Scale Out ['
          - !GetAtt 'ECSServiceGreen.Name'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Statistic: Average
      Dimensions:
        - Name: ClusterName
          Value : !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt 'ECSServiceGreen.Name'
      AlarmDescription: !Sub "ECS CPU使用率 ${ECSStepScaleOutThreshold}%"
      Period: 60
      Threshold: !Ref ECSStepScaleOutThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - !Ref StepScallingScaleOutPolicyGreen
  # ------------------------------------------------------------#
  # ECS Blue Service CPUUtilization Alarm (Step Scaling Scale In)
  # ------------------------------------------------------------#
  CPUAlarmServiceScaleInBlue:
    Type: AWS::CloudWatch::Alarm
    Condition: HasECSStepScaleInThreshold
    DependsOn:
      - StepScallingScaleInPolicyBlue
    Properties:
      AlarmName: !Join
        - ''
        - - 'CPUUtilization Step Scale In ['
          - !GetAtt 'ECSServiceBlue.Name'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Statistic: Average
      Dimensions:
        - Name: ClusterName
          Value : !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt 'ECSServiceBlue.Name'
      AlarmDescription: !Sub "ECS CPU使用率 ${ECSStepScaleInThreshold}%"
      Period: 60
      Threshold: !Ref ECSStepScaleInThreshold
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - !Ref StepScallingScaleInPolicyBlue

  # ------------------------------------------------------------#
  # ECS Green Service CPUUtilization Alarm (Step Scaling Scale In)
  # ------------------------------------------------------------#
  CPUAlarmServiceScaleInGreen:
    Type: AWS::CloudWatch::Alarm
    Condition: HasECSStepScaleInThreshold
    DependsOn:
      - StepScallingScaleInPolicyGreen
    Properties:
      AlarmName: !Join
        - ''
        - - 'CPUUtilization Step Scale In ['
          - !GetAtt 'ECSServiceGreen.Name'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Statistic: Average
      Dimensions:
        - Name: ClusterName
          Value : !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt 'ECSServiceGreen.Name'
      AlarmDescription: !Sub "ECS CPU使用率 ${ECSStepScaleInThreshold}%"
      Period: 60
      Threshold: !Ref ECSStepScaleInThreshold
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - !Ref StepScallingScaleInPolicyGreen

  # ------------------------------------------------------------#
  # ALB HTTPCode_ELB_5XX_Count Alarm (Public)
  # ------------------------------------------------------------#
  HTTPCodePublicELB5XX:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternet
    Properties:
      AlarmName: !Join
        - ''
        - - 'HTTPCode_ELB_5XX_Count ['
          - !GetAtt 'PublicALB.LoadBalancerName'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_ELB_5XX_Count
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt 'PublicALB.LoadBalancerFullName'
      AlarmDescription: "ALB HTTPコード5XX 5回以上/5分間発生"
      Statistic: Sum
      Period: 300
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # ALB HTTPCode_ELB_5XX_Count Alarm (Internal)
  # ------------------------------------------------------------#
  HTTPCodeInternalELB5XX:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternal
    Properties:
      AlarmName: !Join
        - ''
        - - 'HTTPCode_ELB_5XX_Count ['
          - !GetAtt 'InternalALB.LoadBalancerName'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_ELB_5XX_Count
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt 'InternalALB.LoadBalancerFullName'
      AlarmDescription: "ALB HTTPコード5XX 5回以上/5分間発生"
      Statistic: Sum
      Period: 300
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # Blue TargetGroup HTTPCode_Target_5XX_Count Alarm (Public)
  # ------------------------------------------------------------#
  HTTPCodeTargetBlue5XX:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternet
    Properties:
      AlarmName: !Join
        - ''
        - - 'HTTPCode_Target_5XX_Count ['
          - !GetAtt 'ALBTargetBlue.TargetGroupName'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_Target_5XX_Count
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 'ALBTargetBlue.TargetGroupFullName'
      AlarmDescription: "TargetGroup HTTPコード5XX 5回以上/5分間発生"
      Statistic: Sum
      Period: 300
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # Green TargetGroup HTTPCode_Target_5XX_Count Alarm (Public)
  # ------------------------------------------------------------#
  HTTPCodeTargetGreen5XX:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternet
    Properties:
      AlarmName: !Join
        - ''
        - - 'HTTPCode_Target_5XX_Count ['
          - !GetAtt 'ALBTargetGreen.TargetGroupName'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_Target_5XX_Count
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 'ALBTargetGreen.TargetGroupFullName'
      AlarmDescription: "TargetGroup HTTPコード5XX 5回以上/5分間発生"
      Statistic: Sum
      Period: 300
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # Blue TargetGroup HTTPCode_Target_5XX_Count Alarm (Internal)
  # ------------------------------------------------------------#
  HTTPCodeInternalTargetBlue5XX:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternal
    Properties:
      AlarmName: !Join
        - ''
        - - 'HTTPCode_Target_5XX_Count ['
          - !GetAtt 'InternalALBTargetBlue.TargetGroupName'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_Target_5XX_Count
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 'InternalALBTargetBlue.TargetGroupFullName'
      AlarmDescription: "TargetGroup HTTPコード5XX 5回以上/5分間発生"
      Statistic: Sum
      Period: 300
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

  # ------------------------------------------------------------#
  # Green TargetGroup HTTPCode_Target_5XX_Count Alarm (Internal)
  # ------------------------------------------------------------#
  HTTPCodeInternalTargetGreen5XX:
    Type: AWS::CloudWatch::Alarm
    Condition: HasALBSchemaInternal
    Properties:
      AlarmName: !Join
        - ''
        - - 'HTTPCode_Target_5XX_Count ['
          - !GetAtt 'InternalALBTargetGreen.TargetGroupName'
          - ']'
      ActionsEnabled: true
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_Target_5XX_Count
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 'InternalALBTargetGreen.TargetGroupFullName'
      AlarmDescription: "TargetGroup HTTPコード5XX 5回以上/5分間発生"
      Statistic: Sum
      Period: 300
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      AlarmActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic
      OKActions:
        - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-cloudwatch-alarm-topic

####################################### Outputs #######################################

Outputs:
  ECRepository:
    Description: EC Repository Path
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}
  ECRBlue:
    Description: EC Repository Path
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:prod-blue
  ECRGreen:
    Description: EC Repository Path
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:prod-green
  ALBListener:
    Description: ALB Listener ARN
    Value: !If [HasALBSchemaInternet, !Ref ALBListener, ""]
  InternalALBListener:
    Description: InternalALB Listener ARN
    Value: !If [HasALBSchemaInternal, !Ref InternalALBListener, ""]
  SystemName:
    Description: Sub System Name
    Value: !Ref SystemName
  PublicALBDomainName:
    Description: Public ALB Domain Name
    Value: !If [HasALBSchemaInternet, !GetAtt PublicALB.DNSName, ""]
  InternalALBDomainName:
    Description: Public ALB Domain Name
    Value: !If [HasALBSchemaInternal, !GetAtt InternalALB.DNSName, ""]