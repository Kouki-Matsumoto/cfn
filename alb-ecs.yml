AWSTemplateFormatVersion: '2010-09-09'
#スタックパラメーター設定
Parameters:
  #環境名
  ENV:
    Type: String
    AllowedValues: ['prod', 'stg', 'dev']
    ConstraintDescription: Enter prod, stg, or dev."
  #サービス名
  ServiceName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    Default: play-store
    ConstraintDescription: Malformed input-Parameter ServiceName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「play-store」
  #システム名
  SystemName:
    Type: String
    AllowedPattern: ^[a-z0-9-]*$
    ConstraintDescription: Malformed input-Parameter SystemName must match pattern [a-z0-9-]+
    Description: Enter service name, like 「venus-api」
  # ALB Type
  ALBSchemaType:
    Type: String
    AllowedValues: ['internet-facing', 'internal']
    ConstraintDescription: Enter internet-facing, or internal."
    Description: Enter ALB Type internet-facing or internal
  # コンテナポート
  ContainerPort:
    Type: Number
    MinValue: 1
    MaxValue: 65565
    ConstraintDescription: Malformed input-Parameter ContainerPort must match 1 ~ 65565
    Description: Enter number of container port, like 「8080」
  # ALBポート
  ALBListenPort:
    Type: Number
    MinValue: 0
    MaxValue: 65565
    Default: 0
    ConstraintDescription: Malformed input-Parameter ALBListenPort must match 1 ~ 65565
    Description: Enter number of ALB Listen Port, like 「3000」
  # SSL ACM ARN
  SSLArn:
    Type: String
    Default: ''
    Description: Specify ACM ARN
  TaskRoleOutputName:
    Type: String
    Default: 'ecs-task-dynamodb-role-arn'
    Description: Output Name of ECS Task Role. Default (ecs-task-dynamodb-role-arn)
Conditions:
  isALBSchemaInternet: !Equals [!Ref ALBSchemaType, 'internet-facing']
  isALBSchemaInternal: !Not [!Equals [!Ref ALBSchemaType, 'internet-facing']]
  hasALBListenPort: !Not [!Equals [!Ref ALBListenPort, 0]]
  hasSSL: !Not [!Equals [!Ref SSLArn, '']]
  isProd: !Equals [!Ref ENV, prod]

Resources:
  # Target Group
  ALBTargetBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${SystemName}-${ENV}-blue
      VpcId:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-VpcId
      UnhealthyThresholdCount: '2'
      HealthCheckPath: "/health_check"
      HealthCheckPort: traffic-port
      TargetType: ip
      Matcher:
        HttpCode: '200'
      Port: !Ref ContainerPort
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-blue
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
  ALBTargetGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${SystemName}-${ENV}-green
      VpcId:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-VpcId
      UnhealthyThresholdCount: '2'
      HealthCheckPath: "/health_check"
      HealthCheckPort: traffic-port
      TargetType: ip
      Matcher:
        HttpCode: '200'
      Port: !Ref ContainerPort
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-green
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # PublicALB or InternalALB
  PublicALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: isALBSchemaInternet
    Properties:
      Name: !Sub ${SystemName}-${ENV}-alb
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-alb-sg-id
      Subnets:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-public-subnet-a
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-public-subnet-c
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-public-subnet-d
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-alb
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
  InternalALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Condition: isALBSchemaInternal
    Properties:
      Name: !Sub ${SystemName}-${ENV}-alb
      Type: application
      IpAddressType: ipv4
      Scheme: internal
      SecurityGroups:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-common-sg-id
      Subnets:
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-private-subnet-a
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-private-subnet-c
      - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-private-subnet-d
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-alb
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # ALB Listener
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: !If [hasALBListenPort, !Ref ALBListenPort , !If [hasSSL, 443, 80]]
      Protocol: !If [hasSSL, HTTPS, HTTP]
      LoadBalancerArn: !If [isALBSchemaInternet, !Ref PublicALB, !Ref InternalALB]
      Certificates:
        !If
        - hasSSL
        - 
          - CertificateArn: !Ref SSLArn
        - !Ref "AWS::NoValue"
      SslPolicy: !If [hasSSL, "ELBSecurityPolicy-2016-08", !Ref "AWS::NoValue"]
      DefaultActions:
      - Type: fixed-response
        FixedResponseConfig:
          ContentType: text/html
          StatusCode: 200
          MessageBody: ''
  ALBBlueGreenListener:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    DependsOn: ALBListener
    Properties:
      ListenerArn: !Ref ALBListener
      Priority: 1
      Conditions:
      - Field: path-pattern
        PathPatternConfig:
          Values:
          - '/*'
      Actions:
      - Type: forward
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref ALBTargetBlue
            Weight: 1
          - TargetGroupArn: !Ref ALBTargetGreen
            Weight: 0

  # Repository
  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${SystemName}-${ENV}
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-ecr
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${SystemName}-${ENV}
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-ecs
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  # ECS Task Definitions
  ECSTaskDefinitionBlue:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${SystemName}-${ENV}-blue
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: !If [isProd, 2048, 1024]
      Memory: !If [isProd, 4096, 2048]
      ExecutionRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-task-execution-role-arn
      TaskRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-${TaskRoleOutputName}
      ContainerDefinitions:
        - Name: !Sub ${SystemName}-${ENV}-blue
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:${ENV}-blue
          PortMappings:
          - ContainerPort: !Ref ContainerPort
            HostPort: !Ref ContainerPort
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-blue-task-definition
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName
  ECSTaskDefinitionGreen:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${SystemName}-${ENV}-green
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: !If [isProd, 2048, 1024]
      Memory: !If [isProd, 4096, 2048]
      ExecutionRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-task-execution-role-arn
      TaskRoleArn:
        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-task-dynamodb-role-arn
      ContainerDefinitions:
        - Name: !Sub ${SystemName}-${ENV}-green
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:${ENV}-green
          PortMappings:
          - ContainerPort: !Ref ContainerPort
            HostPort: !Ref ContainerPort
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${ENV}-green-task-definition
      - Key: ENV
        Value: !Ref ENV
      - Key: Project
        Value: !Ref ServiceName

  ECSServiceBlue:
    Type: AWS::ECS::Service
    DependsOn: ALBBlueGreenListener
    Properties:
      ServiceName: !Sub ${SystemName}-${ENV}-blue
      Cluster: !Ref ECSCluster
      DesiredCount: 0
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: !Sub ${SystemName}-${ENV}-blue
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ALBTargetBlue
      TaskDefinition: !Ref ECSTaskDefinitionBlue
#      Role:
#        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-service-role
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-a
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-c
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-d
          SecurityGroups:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-common-sg-id
  ECSServiceGreen:
    Type: AWS::ECS::Service
    DependsOn: ALBBlueGreenListener
    Properties:
      ServiceName: !Sub ${SystemName}-${ENV}-green
      Cluster: !Ref ECSCluster
      DesiredCount: 0
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: !Sub ${SystemName}-${ENV}-green
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ALBTargetGreen
      TaskDefinition: !Ref ECSTaskDefinitionGreen
#      Role:
#        Fn::ImportValue: !Sub ${ServiceName}-${ENV}-ecs-service-role
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-a
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-c
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-nat-subnet-d
          SecurityGroups:
            - Fn::ImportValue: !Sub ${ServiceName}-${ENV}-common-sg-id

Outputs:
  ECRepository:
    Description: EC Repository Path
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR} 
  ECRBlue:
    Description: EC Repository Path
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:prod-blue
  ECRGreen:
    Description: EC Repository Path
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECR}:prod-green
  ALBListener:
    Description: ALB Listener ARN
    Value: !Ref ALBListener
  SystemName:
    Description: Sub System Name
    Value: !Ref SystemName
    



